{"file_contents":{"app.py":{"content":"import os\nimport logging\nfrom flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask_login import LoginManager\nfrom sqlalchemy.orm import DeclarativeBase\n\n# Set up logging for debugging\nlogging.basicConfig(level=logging.DEBUG)\n\nclass Base(DeclarativeBase):\n    pass\n\ndb = SQLAlchemy(model_class=Base)\n\n# Create the Flask app\napp = Flask(__name__)\napp.secret_key = os.environ.get(\"SESSION_SECRET\", \"recovery-community-secret-key\")\n\n# Configure the database\napp.config[\"SQLALCHEMY_DATABASE_URI\"] = os.environ.get(\"DATABASE_URL\")\napp.config[\"SQLALCHEMY_ENGINE_OPTIONS\"] = {\n    \"pool_recycle\": 300,\n    \"pool_pre_ping\": True,\n}\n\n# Initialize the app with the extension\ndb.init_app(app)\n\n# Initialize Flask-Login\nlogin_manager = LoginManager()\nlogin_manager.init_app(app)\nlogin_manager.login_view = 'login'\nlogin_manager.login_message = 'Please log in to access your recovery journal.'\n\n@login_manager.user_loader\ndef load_user(user_id):\n    from models import User\n    return User.query.get(int(user_id))\n\n# Create database tables\nwith app.app_context():\n    # Import models to register them with SQLAlchemy\n    import models\n    db.create_all()\n\n# Import routes after app creation to avoid circular imports\nfrom routes import *\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", port=5000, debug=True)\n","size_bytes":1320},"email_service.py":{"content":"import os\nimport sys\nfrom sendgrid import SendGridAPIClient\nfrom sendgrid.helpers.mail import Mail, Email, To, Content, Attachment, FileContent, FileName, FileType, Disposition\nimport base64\nimport logging\n\ndef send_welcome_email(to_email, subscriber_name=None):\n    \"\"\"\n    Send welcome email with recovery resources to new subscribers\n    \"\"\"\n    try:\n        # Get SendGrid API key\n        sendgrid_key = os.environ.get('SENDGRID_API_KEY')\n        if not sendgrid_key:\n            logging.error(\"SENDGRID_API_KEY environment variable not set\")\n            return False\n\n        sg = SendGridAPIClient(sendgrid_key)\n\n        # Email content\n        from_email = Email(\"info@eyesofanaddict.online\", \"D. Bailey - Eyes of an Addict\")\n        to_email = To(to_email)\n        \n        subject = \"Welcome to Eyes of an Addict Recovery Community! üåü\"\n        \n        # Personalized greeting\n        greeting = f\"Hi {subscriber_name},\" if subscriber_name else \"Hi there,\"\n        \n        # HTML email content\n        html_content = f\"\"\"\n        <!DOCTYPE html>\n        <html>\n        <head>\n            <style>\n                body {{ font-family: Arial, sans-serif; line-height: 1.6; color: #2c3e50; max-width: 600px; margin: 0 auto; }}\n                .header {{ background: linear-gradient(135deg, #4a90e2 0%, #27ae60 100%); color: white; padding: 20px; text-align: center; }}\n                .content {{ padding: 20px; }}\n                .highlight {{ background-color: #e3f2fd; padding: 15px; border-radius: 5px; margin: 15px 0; }}\n                .resources {{ background-color: #f8f9fa; padding: 20px; border-radius: 5px; margin: 20px 0; }}\n                .footer {{ background-color: #2c3e50; color: white; padding: 15px; text-align: center; font-size: 14px; }}\n                .button {{ background-color: #27ae60; color: white; padding: 12px 25px; text-decoration: none; border-radius: 5px; display: inline-block; margin: 10px 0; }}\n                ul {{ padding-left: 20px; }}\n                li {{ margin: 8px 0; }}\n            </style>\n        </head>\n        <body>\n            <div class=\"header\">\n                <h1>üåü Welcome to Eyes of an Addict!</h1>\n                <p>Your recovery community is here to support you</p>\n            </div>\n            \n            <div class=\"content\">\n                <p>{greeting}</p>\n                \n                <p>Thank you for joining the <strong>Eyes of an Addict</strong> recovery community! I'm D. Bailey, a Certified Peer Recovery Support Specialist with over 5 years in recovery, and I'm excited to support you on this journey.</p>\n                \n                <div class=\"highlight\">\n                    <h3>üéÅ Your Free Welcome Package is Here!</h3>\n                    <p>I've attached three essential recovery resources created from real recovery experience:</p>\n                    <ul>\n                        <li><strong>Welcome Guide</strong> - Everything you need to know about our community and getting started</li>\n                        <li><strong>Daily Affirmations</strong> - 30 powerful affirmations for every stage of recovery</li>\n                        <li><strong>Milestone Tracker</strong> - Celebrate your progress from day 1 to years of recovery</li>\n                    </ul>\n                </div>\n                \n                <div class=\"resources\">\n                    <h3>What Makes This Different?</h3>\n                    <p><strong>Authentic Experience:</strong> Every resource is created by someone with real recovery experience - not corporate wellness programs.</p>\n                    <p><strong>Peer-Led Support:</strong> We understand because we've walked this path ourselves.</p>\n                    <p><strong>Community Focus:</strong> You're joining a movement of people who believe recovery is possible.</p>\n                </div>\n                \n                <h3>What's Next?</h3>\n                <ul>\n                    <li>Download and read your welcome guide</li>\n                    <li>Start using the daily affirmations</li>\n                    <li>Set up your milestone tracker</li>\n                    <li>Visit our website to download your complete 30-Day Recovery Journal</li>\n                    <li>Follow us on social media for daily inspiration</li>\n                </ul>\n                \n                <div class=\"highlight\">\n                    <h3>üìñ Premium Recovery Journal Available</h3>\n                    <p>Ready to take your recovery to the next level? Our comprehensive 30-Day Recovery Journal offers personalized tracking, progress analytics, and secure cloud storage for just $19.99/month.</p>\n                    <a href=\"#\" class=\"button\">Subscribe to Premium Journal</a>\n                </div>\n                \n                <div class=\"highlight\">\n                    <h3>ü§ù Connect With Us</h3>\n                    <p>Follow our social media for daily recovery inspiration:</p>\n                    <ul>\n                        <li>Instagram: @eyes_of_an_addict</li>\n                        <li>TikTok: @eyes_of_a_addict</li>\n                        <li>Website: Visit our community page anytime</li>\n                    </ul>\n                </div>\n                \n                <p><strong>Remember:</strong> Recovery is a journey, not a destination. Every day you choose recovery, you're making progress. You're not alone in this - our entire community is here to support you.</p>\n                \n                <p>Stay strong, stay connected, and remember - one day at a time.</p>\n                \n                <p>With recovery pride,<br>\n                <strong>D. Bailey, CPRSS</strong><br>\n                <em>Certified Peer Recovery Support Specialist</em></p>\n            </div>\n            \n            <div class=\"footer\">\n                <p>Eyes of an Addict - Recovery Community</p>\n                <p>Created by peers, for peers | 5+ years recovery experience</p>\n                <p>Questions? Email us at info@eyesofanaddict.online - we read every message!</p>\n            </div>\n        </body>\n        </html>\n        \"\"\"\n        \n        # Plain text version\n        text_content = f\"\"\"\n        {greeting}\n        \n        Welcome to Eyes of an Addict Recovery Community!\n        \n        Thank you for joining our authentic, peer-led recovery community. I'm D. Bailey, a Certified Peer Recovery Support Specialist with over 5 years in recovery.\n        \n        YOUR WELCOME PACKAGE:\n        \n        I've attached three essential FREE recovery resources:\n        \n        1. Welcome Guide - Everything you need to know about getting started\n        2. Daily Affirmations - 30 powerful affirmations for your recovery journey  \n        3. Milestone Tracker - Celebrate your progress from day 1 onwards\n        \n        WHAT MAKES US DIFFERENT:\n        \n        - Authentic Experience: Created by someone with real recovery experience\n        - Peer-Led Support: We understand because we've been there\n        - Community Focus: You're joining a movement of recovery warriors\n        \n        NEXT STEPS:\n        \n        - Download your resources\n        - Start using the daily affirmations\n        - Set up your milestone tracker\n        - Follow us on social media (@eyes_of_an_addict on Instagram)\n        - Check out our Premium Recovery Journal subscription for advanced tools\n        \n        Remember: Recovery is a journey. Every day you choose recovery, you're winning. You're not alone - we're here to support you.\n        \n        One day at a time,\n        \n        D. Bailey, CPRSS\n        Certified Peer Recovery Support Specialist\n        \n        Questions? Email us at info@eyesofanaddict.online anytime!\n        \"\"\"\n\n        # Create the email\n        mail = Mail(\n            from_email=from_email,\n            to_emails=to_email,\n            subject=subject,\n            html_content=html_content,\n            plain_text_content=text_content\n        )\n\n        # Add attachments\n        try:\n            # Welcome Guide\n            with open('static/downloads/welcome-guide.md', 'rb') as f:\n                welcome_data = f.read()\n            welcome_attachment = Attachment(\n                FileContent(base64.b64encode(welcome_data).decode()),\n                FileName(\"Eyes-of-an-Addict-Welcome-Guide.md\"),\n                FileType(\"text/markdown\"),\n                Disposition(\"attachment\")\n            )\n            mail.add_attachment(welcome_attachment)\n\n            # Daily Affirmations\n            with open('static/downloads/daily-affirmations.md', 'rb') as f:\n                affirmations_data = f.read()\n            affirmations_attachment = Attachment(\n                FileContent(base64.b64encode(affirmations_data).decode()),\n                FileName(\"Daily-Recovery-Affirmations.md\"),\n                FileType(\"text/markdown\"),\n                Disposition(\"attachment\")\n            )\n            mail.add_attachment(affirmations_attachment)\n\n            # Milestone Tracker\n            with open('static/downloads/milestone-tracker.md', 'rb') as f:\n                tracker_data = f.read()\n            tracker_attachment = Attachment(\n                FileContent(base64.b64encode(tracker_data).decode()),\n                FileName(\"Recovery-Milestone-Tracker.md\"),\n                FileType(\"text/markdown\"),\n                Disposition(\"attachment\")\n            )\n            mail.add_attachment(tracker_attachment)\n\n            # Note: 30-Day Recovery Journal is now a premium subscription service only\n\n        except Exception as e:\n            logging.error(f\"Error adding attachments: {e}\")\n            # Continue without attachments rather than failing completely\n\n        # Send the email\n        response = sg.send(mail)\n        \n        if response.status_code == 202:\n            logging.info(f\"Welcome email sent successfully to {to_email}\")\n            return True\n        else:\n            logging.error(f\"Failed to send email. Status code: {response.status_code}\")\n            return False\n            \n    except Exception as e:\n        logging.error(f\"Error sending welcome email: {e}\")\n        return False","size_bytes":10152},"forms.py":{"content":"from flask_wtf import FlaskForm\nfrom wtforms import StringField, TextAreaField, EmailField, SubmitField, PasswordField\nfrom wtforms.validators import DataRequired, Email, Length, EqualTo\n\nclass ContactForm(FlaskForm):\n    \"\"\"Contact form for community inquiries\"\"\"\n    name = StringField('Name', validators=[\n        DataRequired(message=\"Please enter your name\"),\n        Length(min=2, max=100, message=\"Name must be between 2 and 100 characters\")\n    ])\n    \n    email = EmailField('Email', validators=[\n        DataRequired(message=\"Please enter your email address\"),\n        Email(message=\"Please enter a valid email address\")\n    ])\n    \n    subject = StringField('Subject', validators=[\n        DataRequired(message=\"Please enter a subject\"),\n        Length(min=5, max=200, message=\"Subject must be between 5 and 200 characters\")\n    ])\n    \n    message = TextAreaField('Message', validators=[\n        DataRequired(message=\"Please enter your message\"),\n        Length(min=10, max=1000, message=\"Message must be between 10 and 1000 characters\")\n    ])\n    \n    submit = SubmitField('Send Message')\n\nclass EmailSubscriptionForm(FlaskForm):\n    \"\"\"Form for joining the email community\"\"\"\n    name = StringField('Name (Optional)', validators=[\n        Length(max=100, message=\"Name must be less than 100 characters\")\n    ])\n    \n    email = EmailField('Email Address', validators=[\n        DataRequired(message=\"Please enter your email address\"),\n        Email(message=\"Please enter a valid email address\")\n    ])\n    \n    submit = SubmitField('Join Our Community')\n\nclass RegistrationForm(FlaskForm):\n    \"\"\"Form for user registration for journal subscription\"\"\"\n    name = StringField('Full Name', validators=[\n        DataRequired(message=\"Please enter your full name\"),\n        Length(min=2, max=100, message=\"Name must be between 2 and 100 characters\")\n    ])\n    \n    email = EmailField('Email Address', validators=[\n        DataRequired(message=\"Please enter your email address\"),\n        Email(message=\"Please enter a valid email address\")\n    ])\n    \n    password = PasswordField('Password', validators=[\n        DataRequired(message=\"Please enter a password\"),\n        Length(min=6, max=50, message=\"Password must be between 6 and 50 characters\")\n    ])\n    \n    confirm_password = PasswordField('Confirm Password', validators=[\n        DataRequired(message=\"Please confirm your password\"),\n        EqualTo('password', message=\"Passwords must match\")\n    ])\n    \n    submit = SubmitField('Create Account & Subscribe')\n\nclass LoginForm(FlaskForm):\n    \"\"\"Form for user login\"\"\"\n    email = EmailField('Email Address', validators=[\n        DataRequired(message=\"Please enter your email address\"),\n        Email(message=\"Please enter a valid email address\")\n    ])\n    \n    password = PasswordField('Password', validators=[\n        DataRequired(message=\"Please enter your password\")\n    ])\n    \n    submit = SubmitField('Sign In')\n","size_bytes":2940},"main.py":{"content":"from app import app\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", port=5000, debug=True)\n","size_bytes":99},"models.py":{"content":"from app import db\nfrom datetime import datetime\nfrom flask_login import UserMixin\nfrom werkzeug.security import generate_password_hash, check_password_hash\n\nclass EmailSubscriber(db.Model):\n    \"\"\"Model for storing email subscribers to the recovery community\"\"\"\n    id = db.Column(db.Integer, primary_key=True)\n    email = db.Column(db.String(120), unique=True, nullable=False)\n    name = db.Column(db.String(100), nullable=True)\n    subscribed_date = db.Column(db.DateTime, default=datetime.utcnow)\n    is_active = db.Column(db.Boolean, default=True)\n    source = db.Column(db.String(50), default='website')  # Track where they subscribed from\n    \n    def __repr__(self):\n        return f'<EmailSubscriber {self.email}>'\n\nclass ContactMessage(db.Model):\n    \"\"\"Model for storing contact form messages\"\"\"\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String(100), nullable=False)\n    email = db.Column(db.String(120), nullable=False)\n    subject = db.Column(db.String(200), nullable=False)\n    message = db.Column(db.Text, nullable=False)\n    submitted_date = db.Column(db.DateTime, default=datetime.utcnow)\n    is_read = db.Column(db.Boolean, default=False)\n    \n    def __repr__(self):\n        return f'<ContactMessage from {self.email}: {self.subject}>'\n\nclass User(UserMixin, db.Model):\n    \"\"\"Model for user accounts with journal subscriptions\"\"\"\n    id = db.Column(db.Integer, primary_key=True)\n    email = db.Column(db.String(120), unique=True, nullable=False)\n    name = db.Column(db.String(100), nullable=False)\n    password_hash = db.Column(db.String(256), nullable=False)\n    created_date = db.Column(db.DateTime, default=datetime.utcnow)\n    is_active = db.Column(db.Boolean, default=True)\n    is_owner = db.Column(db.Boolean, default=False)  # Owner bypass subscription\n    \n    # Subscription details\n    stripe_customer_id = db.Column(db.String(100), nullable=True)\n    subscription_status = db.Column(db.String(50), default='inactive')  # active, canceled, past_due\n    subscription_start = db.Column(db.DateTime, nullable=True)\n    subscription_end = db.Column(db.DateTime, nullable=True)\n    \n    # Recovery journal progress\n    current_day = db.Column(db.Integer, default=1)\n    days_completed = db.Column(db.Integer, default=0)\n    last_activity = db.Column(db.DateTime, nullable=True)\n    \n    def set_password(self, password):\n        \"\"\"Set password hash\"\"\"\n        self.password_hash = generate_password_hash(password)\n    \n    def check_password(self, password):\n        \"\"\"Check password against hash\"\"\"\n        return check_password_hash(self.password_hash, password)\n    \n    def has_active_subscription(self):\n        \"\"\"Check if user has an active subscription\"\"\"\n        return self.subscription_status == 'active' or self.is_owner\n    \n    def __repr__(self):\n        return f'<User {self.email}>'\n\nclass JournalEntry(db.Model):\n    \"\"\"Model for individual journal entries\"\"\"\n    id = db.Column(db.Integer, primary_key=True)\n    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)\n    day_number = db.Column(db.Integer, nullable=False)  # Day 1-30\n    content = db.Column(db.Text, nullable=True)\n    mood_rating = db.Column(db.Integer, nullable=True)  # 1-10 scale\n    completed = db.Column(db.Boolean, default=False)\n    created_date = db.Column(db.DateTime, default=datetime.utcnow)\n    updated_date = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)\n    \n    # Relationship\n    user = db.relationship('User', backref=db.backref('journal_entries', lazy=True))\n    \n    def __repr__(self):\n        return f'<JournalEntry Day {self.day_number} for User {self.user_id}>'","size_bytes":3677},"pyproject.toml":{"content":"[project]\nname = \"repl-nix-workspace\"\nversion = \"0.1.0\"\ndescription = \"Add your description here\"\nrequires-python = \">=3.11\"\ndependencies = [\n    \"email-validator>=2.3.0\",\n    \"flask-wtf>=1.2.2\",\n    \"flask>=3.1.2\",\n    \"flask-sqlalchemy>=3.1.1\",\n    \"gunicorn>=23.0.0\",\n    \"psycopg2-binary>=2.9.10\",\n    \"wtforms>=3.2.1\",\n    \"sqlalchemy>=2.0.43\",\n    \"sendgrid>=6.12.4\",\n    \"slack-sdk>=3.36.0\",\n    \"stripe>=12.5.1\",\n    \"flask-login>=0.6.3\",\n    \"oauthlib>=3.3.1\",\n    \"pyjwt>=2.10.1\",\n    \"werkzeug>=3.1.3\",\n    \"flask-dance>=7.1.0\",\n]\n","size_bytes":542},"replit.md":{"content":"# Eyes of an Addict - Recovery Community\n\n## Overview\n\nEyes of an Addict is a Flask-based web application for a recovery community platform. The site serves as a digital presence for D. Bailey, a Certified Peer Recovery Support Specialist, providing resources, products, and community support for people in early recovery. The application features a simple informational website with contact functionality, product showcases, and community information.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Template Engine**: Jinja2 with Flask's built-in templating\n- **CSS Framework**: Pico CSS for minimal, semantic styling\n- **Icons**: Feather Icons for consistent iconography\n- **Layout Pattern**: Base template inheritance for consistent navigation and structure\n- **Responsive Design**: Mobile-first approach with CSS Grid for layouts\n\n### Backend Architecture\n- **Framework**: Flask (Python microframework)\n- **Application Structure**: Simple modular design with separate files for routes, forms, and main application\n- **Form Handling**: Flask-WTF with WTForms for contact form validation and CSRF protection\n- **Error Handling**: Custom error handlers for 404 and 500 errors\n- **Session Management**: Flask sessions with configurable secret key\n- **Logging**: Python's built-in logging module for debugging and contact form submissions\n\n### Data Storage Solutions\n- **Current State**: No database implementation - contact forms are logged only\n- **Form Data**: Contact submissions are currently logged to console/files\n- **Static Assets**: File-based storage for CSS, images, and other static content\n- **Session Storage**: Flask's default session storage (cookie-based)\n\n### Authentication and Authorization\n- **Current Implementation**: No authentication system implemented\n- **Security**: CSRF protection through Flask-WTF for forms\n- **Session Security**: Configurable session secret key through environment variables\n\n## External Dependencies\n\n### Third-party Services\n- **CDN Resources**: \n  - Pico CSS framework (cdn.jsdelivr.net)\n  - Feather Icons (cdn.jsdelivr.net)\n\n### Python Libraries\n- **Flask**: Core web framework\n- **Flask-WTF**: Form handling and CSRF protection\n- **WTForms**: Form validation and rendering\n\n### Future Integrations\n- **Email Service**: Will need email integration for contact form functionality\n- **E-commerce Platform**: Product links suggest future integration with external shop\n- **Social Media**: Links prepared for Facebook, Instagram, TikTok integration\n- **Payment Processing**: Required for digital product sales and coaching services\n\n### Development Dependencies\n- **Environment**: Designed for development with debug mode enabled\n- **Deployment**: Configured for cloud deployment (0.0.0.0 host binding)\n- **Asset Management**: Static file serving through Flask's built-in capabilities","size_bytes":2921},"routes.py":{"content":"from flask import render_template, request, flash, redirect, url_for, session\nfrom flask_login import login_user, logout_user, login_required, current_user\nfrom app import app, db\nfrom forms import ContactForm, EmailSubscriptionForm, RegistrationForm, LoginForm\nfrom models import EmailSubscriber, ContactMessage, User, JournalEntry\nfrom email_service import send_welcome_email\nfrom stripe_service import create_checkout_session, create_customer_portal_session, get_subscription_status\nimport stripe\nimport logging\nimport os\n\n@app.route('/')\ndef index():\n    \"\"\"Main homepage with hero section and overview\"\"\"\n    return render_template('index.html')\n\n@app.route('/products')\ndef products():\n    \"\"\"Product showcase page for digital and POD items\"\"\"\n    return render_template('products.html')\n\n@app.route('/faq')\ndef faq():\n    \"\"\"FAQ page with common questions\"\"\"\n    return render_template('faq.html')\n\n@app.route('/contact', methods=['GET', 'POST'])\ndef contact():\n    \"\"\"Contact page with form for community inquiries\"\"\"\n    form = ContactForm()\n    \n    if form.validate_on_submit():\n        # Save contact message to database\n        contact_msg = ContactMessage(\n            name=form.name.data,\n            email=form.email.data,\n            subject=form.subject.data,\n            message=form.message.data\n        )\n        \n        try:\n            db.session.add(contact_msg)\n            db.session.commit()\n            logging.info(f\"Contact form submitted: {form.name.data} ({form.email.data}) - {form.subject.data}\")\n            flash(f\"Thank you {form.name.data}! Your message has been received. We'll get back to you soon.\", 'success')\n        except Exception as e:\n            db.session.rollback()\n            logging.error(f\"Error saving contact message: {e}\")\n            flash(\"There was an error sending your message. Please try again.\", 'error')\n        \n        return redirect(url_for('contact'))\n    \n    return render_template('contact.html', form=form)\n\n@app.route('/join', methods=['GET', 'POST'])\ndef join_community():\n    \"\"\"Email subscription page for joining the recovery community\"\"\"\n    form = EmailSubscriptionForm()\n    \n    if form.validate_on_submit():\n        # Check if email already exists\n        existing_subscriber = EmailSubscriber.query.filter_by(email=form.email.data).first()\n        \n        if existing_subscriber:\n            if existing_subscriber.is_active:\n                flash(\"You're already part of our community! Thanks for your continued support.\", 'info')\n            else:\n                # Reactivate the subscription\n                existing_subscriber.is_active = True\n                existing_subscriber.name = form.name.data if form.name.data else existing_subscriber.name\n                db.session.commit()\n                \n                # Send welcome email for returning subscriber\n                email_sent = send_welcome_email(form.email.data, form.name.data)\n                \n                if email_sent:\n                    flash(\"Welcome back! Your subscription has been reactivated and fresh recovery resources are on their way to your inbox!\", 'success')\n                else:\n                    flash(\"Welcome back! Your subscription has been reactivated.\", 'success')\n        else:\n            # Create new subscriber\n            subscriber = EmailSubscriber(\n                email=form.email.data,\n                name=form.name.data if form.name.data else None,\n                source='website_join'\n            )\n            \n            try:\n                db.session.add(subscriber)\n                db.session.commit()\n                logging.info(f\"New email subscriber: {form.email.data}\")\n                \n                # Send welcome email with resources\n                email_sent = send_welcome_email(form.email.data, form.name.data)\n                \n                if email_sent:\n                    flash(f\"Welcome to the Eyes of an Addict community! Check your email at {form.email.data} for your free recovery resources!\", 'success')\n                else:\n                    flash(f\"You've joined our community! We're working on getting your welcome email to you - please check back if you don't receive it soon.\", 'success')\n                    \n            except Exception as e:\n                db.session.rollback()\n                logging.error(f\"Error saving email subscriber: {e}\")\n                flash(\"There was an error joining the community. Please try again.\", 'error')\n        \n        return redirect(url_for('join_community'))\n    \n    return render_template('join.html', form=form)\n\n@app.errorhandler(404)\ndef page_not_found(e):\n    \"\"\"Handle 404 errors\"\"\"\n    return render_template('base.html', error_message=\"Page not found\"), 404\n\n@app.route('/register', methods=['GET', 'POST'])\ndef register():\n    \"\"\"User registration for journal subscription\"\"\"\n    form = RegistrationForm()\n    \n    if form.validate_on_submit():\n        # Check if user already exists\n        existing_user = User.query.filter_by(email=form.email.data).first()\n        if existing_user:\n            flash('An account with this email already exists. Please log in instead.', 'error')\n            return redirect(url_for('login'))\n        \n        # Create new user\n        user = User(\n            email=form.email.data,\n            name=form.name.data\n        )\n        user.set_password(form.password.data)\n        \n        try:\n            db.session.add(user)\n            db.session.commit()\n            \n            # Log in the user\n            login_user(user)\n            \n            # Create Stripe checkout session\n            checkout_url = create_checkout_session(user.email, user.name)\n            if checkout_url:\n                return redirect(checkout_url)\n            else:\n                flash('Error creating checkout session. Please try again.', 'error')\n                return redirect(url_for('register'))\n                \n        except Exception as e:\n            db.session.rollback()\n            logging.error(f\"Error creating user: {e}\")\n            flash('Error creating account. Please try again.', 'error')\n    \n    return render_template('register.html', form=form)\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    \"\"\"User login\"\"\"\n    form = LoginForm()\n    \n    if form.validate_on_submit():\n        user = User.query.filter_by(email=form.email.data).first()\n        \n        if user and user.check_password(form.password.data):\n            login_user(user)\n            flash(f'Welcome back, {user.name}!', 'success')\n            \n            # Redirect to dashboard or intended page\n            next_page = request.args.get('next')\n            return redirect(next_page) if next_page else redirect(url_for('dashboard'))\n        else:\n            flash('Invalid email or password. Please try again.', 'error')\n    \n    return render_template('login.html', form=form)\n\n@app.route('/logout')\n@login_required\ndef logout():\n    \"\"\"User logout\"\"\"\n    logout_user()\n    flash('You have been logged out successfully.', 'success')\n    return redirect(url_for('index'))\n\n@app.route('/dashboard')\n@login_required\ndef dashboard():\n    \"\"\"User dashboard for journal access\"\"\"\n    # Check subscription status\n    if not current_user.has_active_subscription():\n        flash('Your subscription is not active. Please subscribe to access your recovery journal.', 'error')\n        return redirect(url_for('subscription_info'))\n    \n    # Get user's journal entries\n    entries = JournalEntry.query.filter_by(user_id=current_user.id).order_by(JournalEntry.day_number).all()\n    \n    # Create missing entries for days 1-30\n    existing_days = {entry.day_number for entry in entries}\n    for day in range(1, 31):\n        if day not in existing_days:\n            new_entry = JournalEntry(user_id=current_user.id, day_number=day)\n            db.session.add(new_entry)\n    \n    try:\n        db.session.commit()\n        entries = JournalEntry.query.filter_by(user_id=current_user.id).order_by(JournalEntry.day_number).all()\n    except Exception as e:\n        db.session.rollback()\n        logging.error(f\"Error creating journal entries: {e}\")\n    \n    return render_template('dashboard.html', entries=entries, current_user=current_user)\n\n@app.route('/subscription/success')\ndef subscription_success():\n    \"\"\"Handle successful Stripe subscription\"\"\"\n    session_id = request.args.get('session_id')\n    \n    if session_id:\n        try:\n            # Retrieve the session from Stripe\n            stripe.api_key = os.environ.get('STRIPE_SECRET_KEY')\n            session = stripe.checkout.Session.retrieve(session_id)\n            \n            if session.payment_status == 'paid':\n                # Update user subscription status\n                user_email = session.metadata.get('user_email')\n                user = User.query.filter_by(email=user_email).first()\n                \n                if user:\n                    user.stripe_customer_id = session.customer\n                    user.subscription_status = 'active'\n                    db.session.commit()\n                    \n                    flash('Welcome to your Recovery Journal! Your subscription is now active.', 'success')\n                    return redirect(url_for('dashboard'))\n        except Exception as e:\n            logging.error(f\"Error processing subscription success: {e}\")\n    \n    flash('There was an issue processing your subscription. Please contact support.', 'error')\n    return redirect(url_for('index'))\n\n@app.route('/subscription/cancel')\ndef subscription_cancel():\n    \"\"\"Handle cancelled Stripe subscription\"\"\"\n    flash('Subscription cancelled. You can try again anytime.', 'info')\n    return redirect(url_for('index'))\n\n@app.route('/subscription/manage')\n@login_required\ndef manage_subscription():\n    \"\"\"Redirect to Stripe customer portal\"\"\"\n    if current_user.stripe_customer_id:\n        portal_url = create_customer_portal_session(current_user.stripe_customer_id)\n        if portal_url:\n            return redirect(portal_url)\n    \n    flash('Unable to access subscription management. Please contact support.', 'error')\n    return redirect(url_for('dashboard'))\n\n@app.route('/subscription/info')\ndef subscription_info():\n    \"\"\"Information about journal subscription\"\"\"\n    return render_template('subscription_info.html')\n\n@app.route('/create-owner-account')\ndef create_owner_account():\n    \"\"\"Create owner account for site access\"\"\"\n    # Check if owner already exists\n    existing_owner = User.query.filter_by(is_owner=True).first()\n    if existing_owner:\n        return f\"Owner account already exists for {existing_owner.email}\"\n    \n    # Create owner account\n    owner = User(\n        email='owner@eyesofanaddict.online',\n        name='D. Bailey',\n        is_owner=True,\n        subscription_status='active'  # Set as active for full access\n    )\n    owner.set_password('recovery2024')  # Simple password for testing\n    \n    try:\n        db.session.add(owner)\n        db.session.commit()\n        return f\"Owner account created! Email: owner@eyesofanaddict.online | Password: recovery2024\"\n    except Exception as e:\n        db.session.rollback()\n        return f\"Error creating owner account: {e}\"\n\n@app.errorhandler(404)\ndef page_not_found(e):\n    \"\"\"Handle 404 errors\"\"\"\n    return render_template('base.html', error_message=\"Page not found\"), 404\n\n@app.errorhandler(500)\ndef internal_error(e):\n    \"\"\"Handle 500 errors\"\"\"\n    return render_template('base.html', error_message=\"Internal server error\"), 500\n","size_bytes":11538},"stripe_service.py":{"content":"import os\nimport stripe\nfrom flask import url_for\nfrom datetime import datetime, timedelta\n\n# Configure Stripe\nstripe.api_key = os.environ.get('STRIPE_SECRET_KEY')\n\ndef create_checkout_session(user_email, user_name):\n    \"\"\"Create a Stripe checkout session for journal subscription\"\"\"\n    try:\n        # Domain for redirects\n        domain = os.environ.get('REPLIT_DEV_DOMAIN') if os.environ.get('REPLIT_DEPLOYMENT') else 'localhost:5000'\n        protocol = 'https' if os.environ.get('REPLIT_DEPLOYMENT') else 'http'\n        \n        checkout_session = stripe.checkout.Session.create(\n            customer_email=user_email,\n            payment_method_types=['card'],\n            line_items=[{\n                'price_data': {\n                    'currency': 'usd',\n                    'product_data': {\n                        'name': '30-Day Recovery Journal - Premium Subscription',\n                        'description': 'Interactive digital recovery journal with personal dashboard and progress tracking',\n                        'images': []  # Add product images if you have them\n                    },\n                    'unit_amount': 1999,  # $19.99 in cents\n                    'recurring': {\n                        'interval': 'month',\n                        'interval_count': 1,\n                    },\n                },\n                'quantity': 1,\n            }],\n            mode='subscription',\n            success_url=f'{protocol}://{domain}/subscription/success?session_id={{CHECKOUT_SESSION_ID}}',\n            cancel_url=f'{protocol}://{domain}/subscription/cancel',\n            metadata={\n                'user_email': user_email,\n                'user_name': user_name\n            },\n            subscription_data={\n                'metadata': {\n                    'user_email': user_email,\n                    'user_name': user_name\n                }\n            },\n            billing_address_collection='required',\n            automatic_tax={'enabled': True},\n        )\n        \n        return checkout_session.url\n    except Exception as e:\n        print(f\"Stripe checkout error: {e}\")\n        return None\n\ndef create_customer_portal_session(customer_id):\n    \"\"\"Create a customer portal session for subscription management\"\"\"\n    try:\n        domain = os.environ.get('REPLIT_DEV_DOMAIN') if os.environ.get('REPLIT_DEPLOYMENT') else 'localhost:5000'\n        protocol = 'https' if os.environ.get('REPLIT_DEPLOYMENT') else 'http'\n        \n        portal_session = stripe.billing_portal.Session.create(\n            customer=customer_id,\n            return_url=f'{protocol}://{domain}/dashboard',\n        )\n        return portal_session.url\n    except Exception as e:\n        print(f\"Customer portal error: {e}\")\n        return None\n\ndef get_subscription_status(customer_id):\n    \"\"\"Get the current subscription status for a customer\"\"\"\n    try:\n        subscriptions = stripe.Subscription.list(customer=customer_id, limit=1)\n        if subscriptions.data:\n            subscription = subscriptions.data[0]\n            return {\n                'status': subscription.status,\n                'current_period_start': datetime.fromtimestamp(subscription.current_period_start),\n                'current_period_end': datetime.fromtimestamp(subscription.current_period_end),\n                'cancel_at_period_end': subscription.cancel_at_period_end\n            }\n        return None\n    except Exception as e:\n        print(f\"Subscription status error: {e}\")\n        return None\n\ndef cancel_subscription(customer_id):\n    \"\"\"Cancel a subscription at the end of the current period\"\"\"\n    try:\n        subscriptions = stripe.Subscription.list(customer=customer_id, limit=1)\n        if subscriptions.data:\n            subscription = subscriptions.data[0]\n            updated_subscription = stripe.Subscription.modify(\n                subscription.id,\n                cancel_at_period_end=True\n            )\n            return True\n        return False\n    except Exception as e:\n        print(f\"Cancel subscription error: {e}\")\n        return False","size_bytes":4064},"static/css/style.css":{"content":"/* Eyes of an Addict - Recovery Community Styles */\n\nbody {\n    padding: 0;\n    margin: 0;\n    font-family: system-ui, -apple-system, \"Segoe UI\", \"Roboto\", sans-serif;\n}\n\n/* Hero Section */\nheader.hero {\n    padding: 2rem;\n    background: none;\n}\n\n.hero-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    max-width: 1200px;\n    margin: 0 auto;\n    gap: 2rem;\n}\n\n/* Remove banner styles - no longer needed */\n\n.hero-text {\n    text-align: center;\n    max-width: 600px;\n}\n\n.hero-actions {\n    display: flex;\n    gap: 1rem;\n    justify-content: center;\n    flex-wrap: wrap;\n    margin-top: 1rem;\n}\n\nheader.hero h1 {\n    color: #2c3e50;\n    font-weight: 700;\n    margin-bottom: 1rem;\n}\n\nheader.hero p {\n    font-size: 1.2rem;\n    color: #5a6c7d;\n    margin: 1rem 0;\n}\n\n/* Sections */\nsection {\n    margin: 3rem 0;\n}\n\n/* Recovery-focused color scheme */\n:root {\n    --recovery-blue: #4a90e2;\n    --recovery-green: #27ae60;\n    --recovery-purple: #8e44ad;\n    --recovery-orange: #f39c12;\n    --recovery-gray: #95a5a6;\n    --recovery-dark: #2c3e50;\n}\n\n/* Navigation with new background */\nnav {\n    background: url('../images/navigation-banner.png');\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    position: relative;\n    min-height: 200px;\n}\n\nnav ul li a {\n    color: white !important;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.7);\n}\n\nnav ul li strong a {\n    color: white !important;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.7);\n}\n\n/* Logo styling */\nnav img {\n    filter: drop-shadow(1px 1px 2px rgba(0, 0, 0, 0.7));\n    background-color: rgba(255, 255, 255, 0.9);\n    border-radius: 4px;\n    padding: 2px;\n}\n\n/* Navigation enhancements */\nnav a[role=\"button\"] {\n    background-color: var(--recovery-blue);\n    border-color: var(--recovery-blue);\n}\n\nnav a[role=\"button\"]:hover {\n    background-color: #357abd;\n    border-color: #357abd;\n}\n\n/* Button variations for recovery theme */\na[role=\"button\"] {\n    transition: all 0.3s ease;\n}\n\na[role=\"button\"]:not(.secondary) {\n    background-color: var(--recovery-green);\n    border-color: var(--recovery-green);\n}\n\na[role=\"button\"]:not(.secondary):hover {\n    background-color: #219a52;\n    border-color: #219a52;\n    transform: translateY(-2px);\n}\n\na[role=\"button\"].secondary {\n    background-color: transparent;\n    border-color: var(--recovery-gray);\n    color: var(--recovery-gray);\n}\n\na[role=\"button\"].secondary:hover {\n    background-color: var(--recovery-gray);\n    color: white;\n}\n\n/* Article enhancements */\narticle {\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\narticle:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\n}\n\n/* Icon styling */\n[data-feather] {\n    width: 1.2em;\n    height: 1.2em;\n    vertical-align: middle;\n    margin-right: 0.5rem;\n}\n\nh3 [data-feather] {\n    color: var(--recovery-blue);\n}\n\n/* Form styling */\n.form-label {\n    font-weight: 600;\n    color: var(--recovery-dark);\n    margin-bottom: 0.5rem;\n    display: block;\n}\n\n.form-control {\n    transition: border-color 0.3s ease, box-shadow 0.3s ease;\n}\n\n.form-control:focus {\n    border-color: var(--recovery-blue);\n    box-shadow: 0 0 0 0.2rem rgba(74, 144, 226, 0.25);\n}\n\n/* Alert styles */\n.alert {\n    border-radius: 0.5rem !important;\n    margin: 1rem 0 !important;\n    padding: 1rem !important;\n}\n\n.alert-success {\n    background-color: #d4edda !important;\n    border: 1px solid #c3e6cb !important;\n    color: #155724 !important;\n}\n\n.alert-error {\n    background-color: #f8d7da !important;\n    border: 1px solid #f5c6cb !important;\n    color: #721c24 !important;\n}\n\n/* FAQ Details styling */\ndetails {\n    margin: 1rem 0;\n    border: 1px solid #dee2e6;\n    border-radius: 0.5rem;\n    overflow: hidden;\n}\n\ndetails summary {\n    padding: 1rem;\n    background-color: #f8f9fa;\n    cursor: pointer;\n    font-weight: 600;\n    transition: background-color 0.3s ease;\n}\n\ndetails summary:hover {\n    background-color: #e9ecef;\n}\n\ndetails[open] summary {\n    background-color: var(--recovery-blue);\n    color: white;\n}\n\ndetails p {\n    padding: 1rem;\n    margin: 0;\n    background-color: white;\n}\n\n/* Footer styling */\nfooter {\n    margin-top: 4rem;\n    text-align: center;\n    padding: 2rem 0;\n    border-top: 1px solid #dee2e6;\n    background-color: #f8f9fa;\n}\n\nfooter small {\n    color: var(--recovery-gray);\n}\n\nfooter a {\n    color: var(--recovery-blue);\n    text-decoration: none;\n}\n\nfooter a:hover {\n    text-decoration: underline;\n}\n\n/* Social media links */\nul li a[href*=\"facebook.com\"] [data-feather] {\n    color: #3b5998;\n}\n\nul li a[href*=\"instagram.com\"] [data-feather] {\n    color: #e1306c;\n}\n\nul li a[href*=\"tiktok.com\"] [data-feather] {\n    color: #000000;\n}\n\nul li a[href*=\"baileytrends.com\"] [data-feather] {\n    color: var(--recovery-purple);\n}\n\n/* Free Resources Section */\n.free-offer {\n    background: linear-gradient(135deg, #e8f5e8 0%, #f0f8ff 100%);\n    padding: 3rem 2rem;\n    border-radius: 1rem;\n    text-align: center;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.free-resources-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 2rem;\n    margin: 2rem 0;\n}\n\n.resource-item {\n    background: white;\n    padding: 1.5rem;\n    border-radius: 0.5rem;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    transition: transform 0.3s ease;\n}\n\n.resource-item:hover {\n    transform: translateY(-4px);\n}\n\n.cta-button {\n    background-color: var(--recovery-green) !important;\n    border-color: var(--recovery-green) !important;\n    font-size: 1.2rem !important;\n    padding: 1rem 2rem !important;\n    font-weight: 600 !important;\n}\n\n/* Premium Journal Section */\n.premium-offer {\n    background: linear-gradient(135deg, #f8f4ff 0%, #fff8f0 100%);\n    padding: 3rem 2rem;\n    border-radius: 1rem;\n    margin: 3rem 0;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.journal-features {\n    margin: 2rem 0;\n}\n\n.feature {\n    text-align: center;\n    padding: 1rem;\n}\n\n.pricing-section {\n    display: flex;\n    justify-content: center;\n    margin: 3rem 0;\n}\n\n.price-card {\n    background: white;\n    padding: 2rem;\n    border-radius: 1rem;\n    text-align: center;\n    max-width: 400px;\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);\n    border: 2px solid var(--recovery-blue);\n}\n\n.price {\n    font-size: 3rem;\n    font-weight: 700;\n    color: var(--recovery-blue);\n    margin: 1rem 0;\n}\n\n.price span {\n    font-size: 1rem;\n    color: var(--recovery-gray);\n}\n\n.price-card ul {\n    text-align: left;\n    margin: 1.5rem 0;\n    padding-left: 1rem;\n}\n\n.price-card li {\n    margin: 0.5rem 0;\n    position: relative;\n}\n\n.price-card li::before {\n    content: \"‚úì\";\n    color: var(--recovery-green);\n    font-weight: bold;\n    position: absolute;\n    left: -1rem;\n}\n\n.premium-cta {\n    background-color: var(--recovery-blue) !important;\n    border-color: var(--recovery-blue) !important;\n    font-size: 1.1rem !important;\n    padding: 1rem 2rem !important;\n    width: 100% !important;\n    margin: 1rem 0 !important;\n}\n\n/* Additional sections styling */\n#additional-offerings {\n    margin: 4rem 0;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n    header.hero {\n        padding: 2rem 1rem;\n    }\n    \n    .hero-content {\n        gap: 1rem;\n    }\n    \n    .hero-actions {\n        flex-direction: column;\n        align-items: center;\n    }\n    \n    header.hero h1 {\n        font-size: 2rem;\n    }\n    \n    .grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .free-resources-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    nav ul {\n        flex-direction: column;\n        gap: 0.5rem;\n    }\n    \n    .free-offer, .premium-offer {\n        padding: 2rem 1rem;\n    }\n    \n    .price {\n        font-size: 2rem;\n    }\n}\n\n/* Accessibility improvements */\n@media (prefers-reduced-motion: reduce) {\n    * {\n        animation-duration: 0.01ms !important;\n        animation-iteration-count: 1 !important;\n        transition-duration: 0.01ms !important;\n    }\n}\n\n/* Focus indicators for accessibility */\na:focus,\nbutton:focus,\ninput:focus,\ntextarea:focus,\nselect:focus {\n    outline: 2px solid var(--recovery-blue);\n    outline-offset: 2px;\n}\n\n/* Journal Preview Styles */\n.journal-preview-section {\n    margin: 2rem 0;\n}\n\n.journal-preview {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n}\n\n.journal-cover-container {\n    position: relative;\n    cursor: pointer;\n    transition: transform 0.3s ease;\n    margin-bottom: 1rem;\n}\n\n.journal-cover-container:hover {\n    transform: scale(1.05);\n}\n\n.journal-cover-image {\n    width: 200px;\n    height: auto;\n    border-radius: 8px;\n    box-shadow: 0 4px 15px rgba(0,0,0,0.2);\n}\n\n.preview-overlay {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: 0;\n    transition: opacity 0.3s ease;\n}\n\n.journal-cover-container:hover .preview-overlay {\n    opacity: 1;\n}\n\n.preview-btn {\n    background: rgba(74, 144, 226, 0.9);\n    color: white;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 25px;\n    cursor: pointer;\n    font-size: 14px;\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.journal-preview-text h4 {\n    color: var(--recovery-blue);\n    margin: 0.5rem 0;\n}\n\n/* Journal Modal Styles */\n.journal-modal {\n    display: none;\n    position: fixed;\n    z-index: 1000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0,0,0,0.8);\n}\n\n.modal-content {\n    background-color: white;\n    margin: 2% auto;\n    padding: 0;\n    border-radius: 12px;\n    width: 90%;\n    max-width: 800px;\n    max-height: 90vh;\n    overflow-y: auto;\n}\n\n.modal-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1.5rem;\n    border-bottom: 1px solid #eee;\n}\n\n.modal-header h3 {\n    margin: 0;\n    color: var(--recovery-blue);\n}\n\n.close {\n    color: #aaa;\n    font-size: 28px;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.close:hover {\n    color: var(--recovery-blue);\n}\n\n.modal-body {\n    padding: 1.5rem;\n}\n\n.page-navigation {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1rem;\n    padding: 0.5rem;\n    background: #f8f9fa;\n    border-radius: 8px;\n}\n\n.nav-btn {\n    background: var(--recovery-blue);\n    color: white;\n    border: none;\n    padding: 8px 15px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background 0.3s ease;\n}\n\n.nav-btn:hover {\n    background: var(--recovery-purple);\n}\n\n.nav-btn:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n}\n\n.page-counter {\n    font-weight: 500;\n    color: var(--recovery-dark);\n}\n\n.journal-page-viewer {\n    text-align: center;\n    margin: 1rem 0;\n}\n\n.journal-page-image {\n    max-width: 100%;\n    height: auto;\n    border-radius: 8px;\n    box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n}\n\n.page-description {\n    text-align: center;\n    margin: 1rem 0;\n    padding: 1rem;\n    background: #f8f9fa;\n    border-radius: 8px;\n}\n\n.page-description h4 {\n    margin: 0 0 0.5rem 0;\n    color: var(--recovery-blue);\n}\n\n.modal-subscription-offer {\n    border-top: 1px solid #eee;\n    padding-top: 1.5rem;\n    margin-top: 1.5rem;\n}\n\n.subscription-card {\n    background: linear-gradient(135deg, var(--recovery-blue), var(--recovery-green));\n    color: white;\n    padding: 1.5rem;\n    border-radius: 12px;\n    text-align: center;\n}\n\n.subscription-card h4 {\n    margin: 0 0 1rem 0;\n    font-size: 1.2rem;\n}\n\n.subscription-price {\n    font-size: 2rem;\n    font-weight: bold;\n    margin: 1rem 0;\n}\n\n.subscription-price span {\n    font-size: 1rem;\n    opacity: 0.8;\n}\n\n.modal-cta-btn {\n    background: white;\n    color: var(--recovery-blue);\n    border: none;\n    padding: 12px 30px;\n    border-radius: 25px;\n    font-weight: bold;\n    cursor: pointer;\n    text-decoration: none;\n    display: inline-block;\n    margin: 1rem 0;\n    transition: transform 0.3s ease;\n}\n\n.modal-cta-btn:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 15px rgba(0,0,0,0.2);\n}\n","size_bytes":12039},"static/downloads/daily-affirmations.md":{"content":"# ‚ú® Daily Recovery Affirmations\n\n---\n\n**Created by D. Bailey, CPRSS**  \n*5+ Years in Recovery | Certified Peer Recovery Support Specialist*\n\n> *\"What we think, we become. What we affirm, we manifest.\"*\n\n---\n\n## üåÖ Morning Affirmations\n\n*Start your day with intention and strength*\n\n### üéØ **\"Today I choose recovery over addiction.\"**\nüí™ *I have the power to make healthy choices today.*\n\n---\n\n### üíé **\"I am worthy of love, respect, and recovery.\"**\nüå± *My past does not define my future.*\n\n---\n\n### üìà **\"Progress, not perfection, is my goal.\"**\nüéâ *Every small step forward matters.*\n\n---\n\n### üí™ **\"I am stronger than my addiction.\"**\nüèÜ *I have overcome challenges before, and I can do it again.*\n\n---\n\n### üíú **\"Today I will be gentle with myself.\"**\nüå∏ *Self-compassion is part of my healing journey.*\n\n## ‚òÄÔ∏è Midday Check-ins\n\n*Realign your energy and refocus your intentions*\n\n6. **\"I am exactly where I need to be right now.\"**\n   - This moment is my opportunity to choose recovery.\n\n7. **\"I can handle difficult emotions without using substances.\"**\n   - Feelings are temporary; recovery is permanent.\n\n8. **\"I am building a life I'm proud of.\"**\n   - Each sober day adds value to my future.\n\n9. **\"I deserve healthy relationships and genuine connections.\"**\n   - Recovery opens doors to authentic relationships.\n\n10. **\"I am learning to trust myself again.\"**\n    - My judgment improves with each day of sobriety.\n\n## Evening Reflections\n\n11. **\"I made it through another day sober.\"**\n    - This is worth celebrating, no matter how the day went.\n\n12. **\"I am grateful for my recovery community.\"**\n    - I am not alone in this journey.\n\n13. **\"Tomorrow is a new opportunity to grow.\"**\n    - Each day brings new possibilities for healing.\n\n14. **\"I am becoming the person I was meant to be.\"**\n    - Recovery reveals my authentic self.\n\n15. **\"I choose hope over fear.\"**\n    - My future is bright when I stay committed to recovery.\n\n## Crisis Moments\n\n16. **\"This feeling will pass.\"**\n    - Cravings and difficult emotions are temporary.\n\n17. **\"I have tools to cope with this.\"**\n    - I can reach out for help instead of using substances.\n\n18. **\"One day at a time, one moment at a time.\"**\n    - I only need to stay sober for this moment.\n\n19. **\"I am worth fighting for.\"**\n    - My life has value and meaning beyond addiction.\n\n20. **\"I can start fresh at any moment.\"**\n    - Recovery is always available to me.\n\n## Weekly Milestone Affirmations\n\n**Week 1:** \"I am taking the first brave steps.\"\n**Week 2:** \"I am building healthy habits.\"\n**Week 3:** \"I am discovering my strength.\"\n**Week 4:** \"I am creating lasting change.\"\n\n## Monthly Reflections\n\n**30 Days:** \"I have proven I can do hard things.\"\n**60 Days:** \"I am rebuilding trust with myself and others.\"\n**90 Days:** \"I am establishing a solid foundation.\"\n**6 Months:** \"I am transforming my life.\"\n**1 Year:** \"I am living proof that recovery works.\"\n\n---\n\n## How to Use These Affirmations\n\n1. **Read them daily** - Make it part of your morning routine\n2. **Write them down** - The act of writing reinforces the message\n3. **Say them out loud** - Speak them with conviction\n4. **Customize them** - Make them personal to your journey\n5. **Share them** - Help others by sharing what works for you\n\nRemember: Affirmations work best when combined with action. Use these as motivation to take concrete steps in your recovery journey.\n\n---\n\n**Created with authentic recovery experience**  \n*D. Bailey, CPRSS - Eyes of an Addict*","size_bytes":3533},"static/downloads/milestone-tracker.md":{"content":"# üèÜ Recovery Milestone Tracker\n\n---\n\n**Your Journey Deserves Celebration**  \n*Created by D. Bailey, CPRSS | Eyes of an Addict*\n\n> *\"Every day in recovery is a victory worth celebrating\"*\n\n---\n\n## üìÖ Daily Check-ins (First 30 Days)\n\n*Track your progress one day at a time*\n\n### üå± Week 1: Building Foundation\n\nüéØ **Day 1:** I chose recovery today  \nüí™ **Day 2:** I made it through yesterday's challenges  \nüîÑ **Day 3:** I'm developing new routines  \nüßò **Day 4:** I'm learning to sit with difficult feelings  \nüõ†Ô∏è **Day 5:** I'm discovering healthy coping strategies  \nü§ù **Day 6:** I'm building my support network  \nüèÜ **Day 7:** **WEEKLY MILESTONE** - I completed my first week!\n\n**‚ú® Week 1 Reflection:**\n\n| Reflection Point | My Response |\n|------------------|-------------|\n| üî• Biggest challenge: | _________________________ |\n| üåü Proudest moment: | _________________________ |\n| üí° What I learned: | _________________________ |\n\n### Week 2: Strengthening Resolve\n- [ ] Day 8: I'm developing emotional resilience\n- [ ] Day 9: I'm creating healthy boundaries\n- [ ] Day 10: I'm practicing self-compassion\n- [ ] Day 11: I'm discovering new interests\n- [ ] Day 12: I'm building trust with loved ones\n- [ ] Day 13: I'm handling stress without substances\n- [ ] Day 14: **WEEKLY MILESTONE** - Two weeks strong!\n\n**Week 2 Reflection:**\n- How I've grown: ___________________________________\n- New coping strategies: ____________________________\n- Support I've received: ____________________________\n\n### Week 3: Gaining Momentum\n- [ ] Day 15: I'm feeling more confident in recovery\n- [ ] Day 16: I'm developing a clearer sense of purpose\n- [ ] Day 17: I'm making amends where appropriate\n- [ ] Day 18: I'm practicing gratitude daily\n- [ ] Day 19: I'm setting healthy goals\n- [ ] Day 20: I'm inspiring others by my example\n- [ ] Day 21: **WEEKLY MILESTONE** - Three weeks of growth!\n\n**Week 3 Reflection:**\n- Positive changes I notice: _________________________\n- Relationships improving: ___________________________\n- Future goals: _____________________________________\n\n### Week 4: Establishing New Normal\n- [ ] Day 22: I'm comfortable with my new routines\n- [ ] Day 23: I'm handling triggers more effectively\n- [ ] Day 24: I'm taking care of my physical health\n- [ ] Day 25: I'm nurturing my mental wellbeing\n- [ ] Day 26: I'm contributing to my community\n- [ ] Day 27: I'm planning for long-term success\n- [ ] Day 28: **WEEKLY MILESTONE** - Almost 30 days!\n\n### The Big Milestones\n- [ ] Day 29: I'm preparing to celebrate 30 days\n- [ ] Day 30: **30-DAY MILESTONE** - I did it!\n\n**30-Day Celebration:**\n- How I want to celebrate: __________________________\n- People to thank: ___________________________________\n- What 30 days means to me: ________________________\n\n## Major Milestones\n\n### Short-term Goals\n- [ ] **7 Days** - One week sober (Date: ________)\n- [ ] **14 Days** - Two weeks strong (Date: ________)\n- [ ] **30 Days** - One month milestone (Date: ________)\n- [ ] **60 Days** - Two months of growth (Date: ________)\n- [ ] **90 Days** - Three months of progress (Date: ________)\n\n### Long-term Achievements\n- [ ] **6 Months** - Half a year of recovery (Date: ________)\n- [ ] **9 Months** - Nine months of transformation (Date: ________)\n- [ ] **1 Year** - One year anniversary (Date: ________)\n- [ ] **18 Months** - A year and a half strong (Date: ________)\n- [ ] **2 Years** - Two years of freedom (Date: ________)\n\n## Special Achievements\n\n### Recovery Skills Unlocked\n- [ ] First time handling stress without substances\n- [ ] First social event attended sober\n- [ ] First difficult conversation navigated in recovery\n- [ ] First time helping another person in recovery\n- [ ] First time saying \"no\" to substance use\n- [ ] First time reaching out for support when struggling\n\n### Life Improvements\n- [ ] Improved relationship with family member\n- [ ] New healthy friendship developed\n- [ ] Physical health improvement noticed\n- [ ] Mental clarity improvement\n- [ ] Financial situation improving\n- [ ] Work/school performance improving\n- [ ] Sleep quality improving\n- [ ] Self-esteem growing\n\n### Giving Back\n- [ ] Shared my story to help someone else\n- [ ] Volunteered for recovery cause\n- [ ] Mentored someone new to recovery\n- [ ] Participated in recovery community event\n- [ ] Donated to recovery organization\n- [ ] Advocated for recovery awareness\n\n## Monthly Reflection Questions\n\n**Month 1:**\n- What surprised me most about early recovery?\n- What tools have been most helpful?\n- What do I want to focus on next month?\n\n**Month 2:**\n- How have my relationships changed?\n- What new aspects of myself have I discovered?\n- What challenges do I still face?\n\n**Month 3:**\n- What does recovery mean to me now?\n- How has my daily life improved?\n- What are my goals for the next 3 months?\n\n## Celebration Ideas\n\n### Small Daily Celebrations\n- Special coffee or tea\n- Favorite healthy meal\n- Call a supportive friend\n- Write in gratitude journal\n- Take a peaceful walk\n\n### Weekly Milestone Rewards\n- Movie night\n- New book or magazine\n- Special outing\n- Hobby time\n- Self-care activity\n\n### Major Milestone Celebrations\n- Dinner with loved ones\n- Weekend getaway\n- Special purchase you've been wanting\n- Recovery community celebration\n- Professional photoshoot to commemorate\n\n## Remember\n\n- Every day counts, even the difficult ones\n- Progress isn't always linear\n- Celebrate small wins along the way\n- Your recovery inspires others\n- You're stronger than you know\n\n---\n\n**Your recovery journey is unique and valuable**  \n*Created by D. Bailey, CPRSS - Eyes of an Addict*  \n*With 5+ years of recovery experience*","size_bytes":5651},"static/downloads/welcome-guide.md":{"content":"# üåü Welcome to Eyes of an Addict Recovery Community\n\n---\n\n**Created by D. Bailey, CPRSS**  \n*Certified Peer Recovery Support Specialist | 5+ Years in Recovery*\n\n---\n\n## üöÄ Welcome to Your Recovery Journey\n\n> *\"Recovery is not a destination, it's a journey of discovering who you were meant to be.\"*\n\nThank you for joining our **authentic, peer-led recovery community**. This guide will help you get started with the resources and support available to you.\n\n**You've taken the first brave step. We're honored to walk this path with you.**\n\n## üì¶ What You'll Find Here\n\n### üåü Your Recovery Toolkit\n\n‚ú® **Daily affirmations** created by someone with 5+ years in recovery  \nüèÜ **Milestone tracking sheets** to celebrate your progress  \nüí™ **Coping strategies** that actually work in real life  \nü§ù **Connection to a community** that truly understands\n\n### üí™ Building Your Foundation\n\n> **The First 30 Days Are Critical**\n\nüéØ Focus on one day at a time  \nüìù Use the daily check-in system  \nü§ù Connect with your support network  \nüíú Practice self-compassion  \n\n**‚ú® Remember These Recovery Truths:**\n\n| Truth | Why It Matters |\n|-------|----------------|\n| üìà Progress, not perfection | Every small step counts |\n| üèÜ Every day sober is a victory | Celebrate each milestone |\n| ü´Ç You're not alone in this journey | Community support is powerful |\n| üíé Relapses don't erase your progress | Recovery is not linear |\n\n### ü§ù Community Connection\n- Follow us on social media for daily inspiration\n- Share your milestones with the community\n- Ask questions - we've all been there\n- Support others when you're ready\n\n### üìö Upcoming Resources\n- 30-Day Recovery Journal (Book 1 of 3) - Coming Soon\n- Monthly peer support group calls\n- Recovery milestone celebration program\n- Advanced coping strategies workbook\n\n## Getting Started Checklist\n\n- [ ] Save this welcome guide for reference\n- [ ] Print your daily affirmations\n- [ ] Set up your milestone tracker\n- [ ] Follow our social media accounts\n- [ ] Join our community discussions\n\n## Emergency Resources\n\n**If you're in crisis:**\n- National Suicide Prevention Lifeline: 988\n- Crisis Text Line: Text HOME to 741741\n- SAMHSA National Helpline: 1-800-662-4357\n\n**Remember:** Reaching out for help is a sign of strength, not weakness.\n\n## Your Recovery Matters\n\nYou've taken a brave step by joining this community. Recovery is possible, and you deserve all the support and resources available to help you succeed.\n\nStay connected, stay strong, and remember - one day at a time.\n\n---\n\n**D. Bailey, CPRSS**  \n*Eyes of an Addict - Recovery Community*  \n*5+ Years in Recovery*\n\nFor questions or support: Contact us through our website\nFollow us: @eyes_of_an_addict (Instagram) | @eyes_of_a_addict (TikTok)","size_bytes":2781}},"version":1}